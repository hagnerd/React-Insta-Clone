import moment from 'moment'

function getAllDurations(duration) {
  return {
    years: Math.abs(duration.asYears()),
    months: Math.abs(duration.asMonths()),
    days: Math.abs(duration.asDays()),
    hours: Math.abs(duration.asHours()),
    minutes: Math.abs(duration.asMinutes()),
  }
}

function formatDiff(length, unit) {
  return `${length} ${unit} ago`;
}

export function humanReadableDiff({ startingDate = moment(), endingDate }) {
  const duration = getAllDurations(moment.duration(startingDate.diff(endingDate)));

  switch(true) {
    case duration.years > 1:
      return formatDiff(Math.round(duration.years), 'years');
    case duration.months > 1:
      return formatDiff(Math.round(duration.months), 'months');
    case duration.days > 1:
      return formatDiff(Math.round(duration.days), 'days');
    case duration.hours > 1:
      return formatDiff(Math.round(duration.hours), 'hours');
    case duration.minutes > 1:
      return formatDiff(Math.round(duration.minutes), 'minutes');
    default:
      return 'Less than a minute ago';
  }
}

export function logoutUser() {
  window.localStorage.setItem('username', JSON.stringify(null));
}
